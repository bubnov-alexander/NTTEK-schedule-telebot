import telebot, datetime, pytz, time as tm
from telebot import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from settings import *
from buttons import *

tz = pytz.timezone('Asia/Yekaterinburg')
bot = telebot.TeleBot(TOKEN)

#–î–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ start
@bot.message_handler(commands=['start'])
def start_message(message):
    cursor.execute('''SELECT user_id FROM admin WHERE user_id = ?''', (message.chat.id, ))
    admin = 510441193
    if message.chat.id != admin:
        bot.send_message(message.from_user.id, f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}', parse_mode='html')
        db_table_val(message, bot)
        menu(bot, message, message)
    else:
        bot.send_message(message.from_user.id, f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, Admin {message.from_user.first_name}', parse_mode='html')
        db_table_val(message, bot)
        menu(bot, message, message)

@bot.message_handler(commands=['help'])
def help_message(message):
    bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞ —Ç–µ–±–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å "–ú–µ–Ω—é" c –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø–∏—à–∏ –º–Ω–µ | @Kinoki445', parse_mode='html')
    TIME = (datetime.datetime.now(tz)).strftime('%H:%M:%S')
    print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} {message.from_user.first_name} –Ω–∞–ø–∏—Å–∞–ª {message.text} –≤ ', TIME)
    with open("data/logs.txt", "a+") as f:
        f.write(f'\n{TIME} | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} {message.from_user.first_name} –Ω–∞–ø–∏—Å–∞–ª {message.text}')

@bot.message_handler(commands=['students'])
def students(message):
    groupstudents(bot, message)
    TIME = (datetime.datetime.now(tz)).strftime('%H:%M:%S')
    print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} {message.from_user.first_name} –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤', TIME)
    with open("data/logs.txt", "a+") as f:
        f.write(f'\n{TIME} | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} {message.from_user.first_name} –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Ç—É–¥–µ–Ω—Ç–æ–≤')

#–î–µ–π—Å—Ç–≤–∏—è callback
@bot.callback_query_handler(func=lambda callback: callback.data)
def callback(callback):
    mycallback(bot, callback)

#–î–µ–π—Å—Ç–≤–∏—è –∫–æ–≥–¥–∞ –ø—Ä–∏—à—ë–ª —Ç–µ–∫—Å—Ç
@bot.message_handler(content_types=["text"])
def bot_message(message):
    TIME = (datetime.datetime.now(tz)).strftime('%H:%M:%S')
    cursor.execute(f'SELECT id FROM users WHERE user_id = {message.chat.id} ')
    data = cursor.fetchone()
    message_to_bot = message.text.lower()

#–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ø–∏—Å–æ–∫ –∑–∞–±–∞–Ω–µ–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∞ —Ç–∞–∫ –∂–µ –µ—Å—Ç—å –ª–∏ –æ–Ω–∏ –≤ –ë–î
    cursor.execute(f'SELECT user_id FROM ban WHERE user_id = {message.chat.id} ')
    ban = 5322880119
    if message.chat.id != 5322880119:
        if data is None:
            bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç, —Ç–µ–±—è –Ω–µ—Ç—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –Ω–µ –º–æ–≥ –±—ã —Ç—ã –Ω–∞–ø–∏—Å–∞—Ç—å /start ?', parse_mode='html')
        else:
            if message.content_type.lower() == 'text':

                #–ü—Ä–µ–ø–æ–¥—ã
                if message_to_bot == 'üë•–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏üë•' or message_to_bot == '–ø—Ä–µ–ø–æ–¥—ã':
                    prepod(bot, message)
                    TIME = (datetime.datetime.now(tz)).strftime('%H:%M:%S')
                    print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} {message.from_user.first_name} —É–∑–Ω–∞–ª –ø—Ä–µ–ø–æ–¥–æ–≤! –í', TIME)
                    with open("data/logs.txt", "a+") as f:
                        f.write(f'\n{TIME} | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} {message.from_user.first_name} —É–∑–Ω–∞–ª –ø—Ä–µ–ø–æ–¥–æ–≤!')
                #–ú–µ–Ω—é
                elif message_to_bot == 'üîô–Ω–∞–∑–∞–¥' or message_to_bot == '–Ω–∞–∑–∞–¥':
                    menu(bot, message, message)

                elif message_to_bot == '–º–µ–Ω—é' or message_to_bot == 'menu':
                    menu(bot, message, message)
                
                #–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–∑ –ë–î
                elif message_to_bot == 'user' or message_to_bot == '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏':
                    defuser(bot, message, InlineKeyboardMarkup, InlineKeyboardButton)

                elif message_to_bot == '–ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞' or message_to_bot == 'root':
                    root(bot, message, message)

                elif message_to_bot == 'admin panel':
                    adminpanel(bot, message, message)

                elif message_to_bot == '–æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ':
                    send_message_users(bot, message)

                #–í—Å–µ –≥—Ä—É–ø–ø—ã —É –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                elif message_to_bot == '–≥—Ä—É–ø–ø—ã':
                    try:
                        group(bot, message)
                    except:
                        markup = InlineKeyboardMarkup()
                        url1 = InlineKeyboardButton (text = '–°–∞–π—Ç —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º: ', url= 'https://a.nttek.ru/')
                        markup.add(url1)
                        bot.send_message(message.chat.id, '–ö —Å–æ–∂–µ–ª–µ–Ω–∏—é —Å–∞–π—Ç —Å –ø–∞—Ä–∞–º–∏ —Å–µ–π—á–∞—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ —Ç—ã –º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–∑–æ–≤–∞—Ç—å—Å—è –¥—Ä—É–≥–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞. \n–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏ "–º–µ–Ω—é"', parse_mode='html',reply_markup=markup)

                #–í—Å–µ –≥—Ä—É–ø–ø—ã —É –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                elif message_to_bot == 'üìã–ø–∞—Ä—ãüìã' or message_to_bot == '–ø–∞—Ä—ã' or message_to_bot == 'üìã—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µüìã' or message_to_bot == '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
                    try:
                        group(bot, message)
                    except:
                        markup = InlineKeyboardMarkup()
                        url1 = InlineKeyboardButton (text = '–°–∞–π—Ç —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º: ', url= 'https://a.nttek.ru/')
                        markup.add(url1)
                        bot.send_message(message.chat.id, '–ö —Å–æ–∂–µ–ª–µ–Ω–∏—é —Å–∞–π—Ç —Å –ø–∞—Ä–∞–º–∏ —Å–µ–π—á–∞—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ —Ç—ã –º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–∑–æ–≤–∞—Ç—å—Å—è –¥—Ä—É–≥–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞. \n–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏ "–º–µ–Ω—é"', parse_mode='html',reply_markup=markup)

                # elif message_to_bot == 'üìñ–¥–∑üìñ' or message_to_bot == '–¥–∑':
                #     homework(bot, message, InlineKeyboardMarkup, InlineKeyboardButton)
                #     print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} {message.from_user.first_name} –∑–∞–ø—Ä–æ—Å–∏–ª –î–ó! –í', (datetime.datetime.now(tz).strftime('%H:%M:%S')))

                #–°—Ç—É–¥–µ–Ω—Ç—ã –≥—Ä—É–ø–ø—ã 
                # elif message_to_bot == 'üë¨—Å—Ç—É–¥–µ–Ω—Ç—ã –≥—Ä—É–ø–ø—ãüë¨' or message_to_bot == '—Å—Ç—É–¥–µ–Ω—Ç—ã –≥—Ä—É–ø–ø—ã':
                #     groupstudents(bot, message)
                #     print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} {message.from_user.first_name} –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤', (datetime.datetime.now(tz).strftime('%H:%M:%S')))
                
                #–†–∞–Ω–¥–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                elif message_to_bot == 'üîÅ—Ä–∞–Ω–¥–æ–º–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞üîÅ':
                    myrandom(bot, message)
                    TIME = (datetime.datetime.now(tz)).strftime('%H:%M:%S')
                    print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} {message.from_user.first_name} –∑–∞–ø—Ä–æ—Å–∏–ª —Ä–∞–Ω–¥–æ–º! –í', TIME)
                    with open("data/logs.txt", "a+") as f:
                        f.write(f'\n{TIME} | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} {message.from_user.first_name} —É–∑–Ω–∞–ª –ø—Ä–µ–ø–æ–¥–æ–≤!')

                #–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ 
                elif message_to_bot == 'üìí–æ –±–æ—Ç–µüìí' or message_to_bot == '–æ –±–æ—Ç–µ':
                    aboutbot(bot, message)
                    TIME = (datetime.datetime.now(tz)).strftime('%H:%M:%S')
                    print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} {message.from_user.first_name} —É–∑–Ω–∞–ª –æ –±–æ—Ç–µ –≤', TIME)
                    with open("data/logs.txt", "a+") as f:
                        f.write(f'\n{TIME} | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} {message.from_user.first_name} —É–∑–Ω–∞–ª –æ –±–æ—Ç–µ')
                
                #–≠—Ö–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ
                else:
                    bot.send_message(message.chat.id, f'–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: {message.text}\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–∑–∞–Ω—Ç—å —á—Ç–æ –º–æ–∂–µ—Ç –±–æ—Ç –Ω–∞–ø–∏—à–∏—Ç–µ "–º–µ–Ω—é"', parse_mode='html')
                    TIME = (datetime.datetime.now(tz)).strftime('%H:%M:%S')
                    print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} {message.from_user.first_name} –Ω–∞–ø–∏—Å–∞–ª {message.text} –≤', TIME)
                    with open("data/logs.txt", "a+") as f:
                        f.write(f'\n{TIME} | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} {message.from_user.first_name} –Ω–∞–ø–∏—Å–∞–ª {message.text}')

    #–î–µ–π—Å—Ç–≤–∏—è –µ—Å–ª–∏ user –≤ –±–∞–Ω–µ
    else:
        bot.send_message(message.chat.id, '–¢—ã –≤ –ë–ê–ù–ï —á—É—á–µ–ª–æ!!! \n –ü–∏—à–∏ @Kinoki445', parse_mode='html')   
        TIME = (datetime.datetime.now(tz)).strftime('%H:%M:%S')
        print(f'–ó–∞–±–∞–Ω–µ–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} {message.from_user.first_name} –Ω–∞–ø–∏—Å–∞–ª {message.text} –≤', TIME)
        with open("data/logs.txt", "a+") as f:
            f.write(f'\n{TIME} | –ó–∞–±–∞–Ω–µ–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} {message.from_user.first_name} –Ω–∞–ø–∏—Å–∞–ª {message.text}')

if __name__ == '__main__':
    TIME = (datetime.datetime.now(tz)).strftime('%H:%M:%S')
    print ('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω:', TIME)
    with open("data/logs.txt", "a+") as f:
            f.write(f'\n{TIME} | –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')
    while True:
        try:
            bot.infinity_polling(none_stop=True, timeout=123)
        except Exception as e:
            TIME = (datetime.datetime.now(tz)).strftime('%H:%M:%S')
            print(e)
            with open("data/logs.txt", "a+") as f:
                f.write(f'\n{TIME} | e')
            error(bot)
            tm.sleep(15)

# bot.polling(none_stop=True)
